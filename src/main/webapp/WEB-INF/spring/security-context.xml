<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
        xmlns="http://www.springframework.org/schema/security"
        xmlns:beans="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans.xsd
 http://www.springframework.org/schema/security
 http://www.springframework.org/schema/security/spring-security.xsd">

    <http use-expressions="true">
        <intercept-url pattern="/books/add"
                       access="hasAuthority('ROLE_ADMIN')"/>
        <intercept-url pattern="/login"
                       access="permitAll()"/>
<!--        <intercept-url pattern="/*"-->
<!--                     access="hasAuthority('ROLE_ADMIN')"/>
            => localhost:8092/test.jsp 는 걸림, but localhost:8092/depth1/depth2/depth2.jsp는 안 걸림
-->
<!--        <intercept-url pattern="/**"-->
<!--                       access="hasAuthority('ROLE_USER')"/>-->
           <!-- /** => localhost:8092/test.jsp 도 걸린다. 즉 로그인 안 됐다고 /login으로 redirect 시켜버림.-->
        <form-login
                login-page="/login"
                default-target-url="/books/add"
                authentication-failure-url="/loginfailed"
                username-parameter="username"
                password-parameter="password" />
        <csrf/>
        <logout logout-success-url="/logout"/>
    </http>

    <authentication-manager>
        <authentication-provider>
            <user-service>
                <user name="Admin" password="{noop}Admin1234" authorities="ROLE_ADMIN"/>
            </user-service>
        </authentication-provider>
    </authentication-manager>
</beans:beans>